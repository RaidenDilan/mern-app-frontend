{
  // "root": true,
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "settings": {
    "react": {
      "createClass": "createReactClass", // Regex for Component Factory to use,
      // default to "createReactClass"
      "pragma": "React", // Pragma to use, default to "React"
      "version": "detect", // React version. "detect" automatically picks the version you have installed.
      // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
      // default to latest and warns if missing
      // It will default to "detect" in the future
      "flowVersion": "0.53" // Flow version
    },
    "propWrapperFunctions": [
      // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
      "forbidExtraProps",
      {
        "property": "freeze",
        "object": "Object"
      },
      {
        "property": "myFavoriteWrapper"
      }
    ],
    "linkComponents": [
      // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
      "Hyperlink",
      {
        "name": "Link",
        "linkAttribute": "to"
      }
    ]
  },
  "parser": "babel-eslint",
  "parserOptions": {
    "sourceType": "module",
    "allowImportExportEverywhere": true,
    "ecmaFeatures": {
      "experimentalObjectRestSpread": true,
      "jsx": true,
      "globalReturn": false
    }
  },
  "plugins": [
    "react",
    "react-hooks",
    "jsx-a11y"
  ],
  "extends": [
    "eslint:recommended", // "eslint:all",
    "plugin:react/recommended" // "plugin:react/all"
  ],
  "rules": {
    "eqeqeq": [
      "off"
    ],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "no-alert": 0,
    "indent": [
      "warn",
      2,
      {
        "SwitchCase": 1,
        "VariableDeclarator": 1,
        "MemberExpression": 1
        // "ignoredNodes": [
        //   "TemplateLiteral"
        // ]
      }
    ],
    "linebreak-style": 0,
    "quotes": [
      "warn",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "semi": [
      1,
      "always"
    ],
    "getter-return": [
      "off"
    ],
    "default-case": [
      "warn",
      {
        "commentPattern": "^skip\\sdefault"
      }
    ],
    "no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": false
      }
    ],
    "jsx-quotes": [
      "warn",
      "prefer-single"
    ],
    "space-in-parens": [
      "warn",
      "never"
    ],
    "template-curly-spacing": [
      "warn",
      "always"
    ],
    "array-bracket-spacing": [
      "warn",
      "never"
    ],
    "object-curly-spacing": [
      "warn",
      "always"
    ],
    "comma-spacing": [
      "warn",
      {
        "before": false,
        "after": true
      }
    ],
    "comma-dangle": [
      "error",
      {
        "arrays": "never",
        "objects": "never",
        "imports": "never",
        "exports": "never",
        "functions": "never"
      }
    ],
    // "jsx-a11y/img-redundant-alt": [
    //   1,
    //   {
    //     "components": [
    //       "Image"
    //     ],
    //     "words": [
    //       "hello"
    //     ]
    //   }
    // ],
    "react/react-in-jsx-scope": 0,
    "react/no-unescaped-entities": 0,
    "react/jsx-no-target-blank": 0,
    "react/jsx-closing-bracket-location": [
      1,
      {
        "selfClosing": "after-props",
        "nonEmpty": "after-props"
      }
    ],
    "react/display-name": 0,
    "react/jsx-indent": [
      "warn",
      2
    ],
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".js",
          ".jsx"
        ]
      }
    ],
    "react/jsx-indent-props": [
      "error",
      2
    ],
    "react/jsx-curly-spacing": [
      "warn",
      {
        "when": "always",
        "attributes": {
          "allowMultiline": true
        },
        "children": true
      }
    ],
    "react/jsx-tag-spacing": [
      "warn",
      {
        "beforeSelfClosing": "always"
      }
    ],
    "react/jsx-max-props-per-line": [
      "warn",
      {
        "maximum": 1
      }
    ],
    "react/jsx-first-prop-new-line": [
      "warn",
      "multiline"
    ],
    // "jsx-a11y/anchor-is-valid": [
    //   "error",
    //   {
    //     "components": [
    //       "Link"
    //     ],
    //     "specialLink": [
    //       "hrefLeft",
    //       "hrefRight"
    //     ],
    //     "aspects": [
    //       "noHref",
    //       "invalidHref",
    //       "preferButton"
    //     ]
    //   }
    // ],
    "react/prop-types": [
      0
    ],
    // "prefer-template": 0,
    "import/prefer-default-export": [
      0
    ],
    "arrow-parens": [
      1,
      "as-needed"
    ],
    "class-methods-use-this": [
      0
    ],
    // "arrow-body-style": [
    //   "warn",
    //   "as-needed",
    //   {
    //     "requireReturnForObjectLiteral": true
    //   }
    // ],
    "arrow-body-style": 0,
    "no-lonely-if": 0,
    "curly": [
      "off",
      "multi-or-nest"
      // "all"
      // "multi-line"
      // "multi"
      // "consistent"
    ],
    "operator-linebreak": [
      "warn",
      "before",
      {
        "overrides": {
          "?": "before",
          ":": "before"
        }
      }
    ]
  }
  // "globals": {
  //   "React": "writable"
  // }
}